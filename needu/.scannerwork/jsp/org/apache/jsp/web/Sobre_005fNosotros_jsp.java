/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat9
 * Generated at: 2024-05-03 17:52:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.web;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import Modelo.*;
import java.util.*;
import ModeloDAO.*;

public final class Sobre_005fNosotros_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("Modelo");
    _jspx_imports_packages.add("ModeloDAO");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Por qué ser Voluntario</title>\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/estilos_Nosotros.css\">\r\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n    <link href=\"https://fonts.googleapis.com/css2?family=Noto+Sans+Meroitic&family=Poppins:wght@500&display=swap\" rel=\"stylesheet\">\r\n</head>\r\n<body>\r\n\r\n    <div id=\"navbar\">\r\n        <div class=\"logo\">NGO Volunteer</div>\r\n        <div class=\"menu-icon\" onclick=\"toggleMenu()\">\r\n            <img src=\"imagenes/menuU.png\" alt=\"Menú\">\r\n        </div>\r\n        <div class=\"links\">\r\n            <a href=\"#\"></a>\r\n        </div>\r\n    </div>\r\n\r\n    <div id=\"menu-options\" class=\"menu-options\">\r\n        <ul>\r\n            \r\n            \r\n        </ul>\r\n    </div>\r\n    \r\n    \r\n    \r\n    \r\n    <div class=\"container\">\r\n        <div class=\"header\">\r\n          <h1>¿Porque volverse un Voluntario?</h1>\r\n          <p>Convertirse en voluntario ofrece una multitud de beneficios tanto para la comunidad como para el individuo que presta su tiempo y esfuerzos.</p>\r\n");
      out.write("        </div>\r\n\r\n        <div class=\"steps\">\r\n          <div class=\"step\">\r\n              <img src=\"imagenes/Img01.JPG\" alt=\"Set your goals\">\r\n            <h2>1. Contribución Comunitaria</h2>\r\n            <p>El voluntariado permite a las personas hacer una diferencia tangible en su comunidad o en una causa que les importa.</p>\r\n          </div>\r\n\r\n          <div class=\"step\">\r\n              <img src=\"imagenes/Img02.JPG\" alt=\"Name owners\">\r\n            <h2>2. Desarrollo de Habilidades</h2>\r\n            <p>A través del voluntariado, las personas pueden aprender nuevas habilidades o mejorar las existentes, lo que puede ser útil en la vida personal y profesional.</p>\r\n          </div>\r\n\r\n          <div class=\"step\">\r\n              <img src=\"imagenes/Img03.JPG\" alt=\"Get updates\">\r\n            <h2>3. Construcción de Redes</h2>\r\n            <p>El voluntariado ofrece la oportunidad de conocer nuevas personas, lo que puede llevar a amistades duraderas y contactos profesionales valiosos.</p>\r\n          </div>\r\n        </div>\r\n");
      out.write("    </div>\r\n\r\n\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n\r\n \r\n    <script>\r\n        function toggleMenu() {\r\n            var menuOptions = document.getElementById(\"menu-options\");\r\n            if (menuOptions.style.display === \"none\" || menuOptions.style.display === \"\") {\r\n                menuOptions.style.display = \"block\";\r\n                setTimeout(function() {\r\n                    menuOptions.classList.add(\"active\");\r\n                }, 0);\r\n            } else {\r\n                menuOptions.classList.remove(\"active\"); // Retira la clase \"active\" para ocultar el menú\r\n                setTimeout(function() {\r\n                    menuOptions.style.display = \"none\"; // Oculta el menú después de que se retire la animación\r\n                }, 500); // Agrega un retraso para que la animación termine antes de ocultar el menú\r\n            }\r\n        }\r\n\r\n        // Función para cerrar el menú cuando cambia el tamaño de la ventana\r\n        function closeMenuOnResize() {\r\n            var menuOptions = document.getElementById(\"menu-options\");\r\n");
      out.write("            if (menuOptions.classList.contains('active')) {\r\n                menuOptions.classList.remove('active');\r\n                setTimeout(function() {\r\n                    menuOptions.style.display = \"none\";\r\n                }, 500);\r\n            }\r\n        }\r\n\r\n        // Agregar un controlador de eventos al evento 'resize' para detectar cambios de tamaño de ventana\r\n        window.addEventListener('resize', closeMenuOnResize);\r\n    </script>\r\n\r\n</body>\r\n</html>\r\n\r\n\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
