/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat9
 * Generated at: 2024-05-03 17:52:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.web.Usuario.PERFILUsuario;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import Modelo.Usuario;
import Modelo.Calificacion;
import ModeloDAO.CalificacionDAO;

public final class ListarPerfiles_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("ModeloDAO.CalificacionDAO");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("Modelo.Calificacion");
    _jspx_imports_classes.add("Modelo.Usuario");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>Lista de Perfiles</title>\r\n    <style>\r\n        table {\r\n            border-collapse: collapse;\r\n            width: 100%;\r\n        }\r\n\r\n        th, td {\r\n            border: 1px solid black;\r\n            padding: 8px;\r\n            text-align: left;\r\n        }\r\n\r\n        th {\r\n            background-color: #f2f2f2;\r\n        }\r\n\r\n        .highlight {\r\n            background-color: #ffffcc;\r\n        }\r\n\r\n        .options {\r\n            display: flex;\r\n            flex-direction: column;\r\n        }\r\n\r\n        button {\r\n            margin-bottom: 5px;\r\n        }\r\n    </style>\r\n</head>\r\n<body>\r\n    <h2>Lista de Perfiles</h2>\r\n    <form action=\"ControladorCalificar\" method=\"POST\">\r\n        <input type=\"hidden\" name=\"accion\" value=\"listarPerfiles\">\r\n        <table>\r\n            <tr>\r\n                <th>Usuario</th>\r\n                <th>Rol</th>\r\n                <th>Comentarios</th>\r\n                <th>Puntuación</th> <!-- Nueva columna -->\r\n");
      out.write("                <th>Acción</th>\r\n            </tr>\r\n            ");
 
            List<Usuario> usuarios = (List<Usuario>) request.getAttribute("usuarios");
            CalificacionDAO calificacionDAO = new CalificacionDAO();
            int idusuario = (int) session.getAttribute("idusuario");
            
      out.write("\r\n            <p>El ID del usuario actual es: ");
      out.print( idusuario );
      out.write("</p>\r\n            ");
 for (Usuario user : usuarios) { 
      out.write("\r\n                <tr ");
 if (user.getIdusuario() == idusuario) { 
      out.write("class=\"highlight\"");
 } 
      out.write(">\r\n                    <td>");
      out.print( user.getUsuario() );
      out.write(' ');
 if (user.getIdusuario() == idusuario) { 
      out.write("(Yo)");
 } 
      out.write("</td>\r\n                    <td>");
      out.print( user.getRol() );
      out.write("</td>\r\n                    <td>\r\n                        ");
      out.write("\r\n                        ");
 
                            List<String> comentarios = calificacionDAO.getComentariosByUsuarioId(user.getIdusuario());
                            if (comentarios != null && !comentarios.isEmpty()) {
                                for (String comentario : comentarios) {
                        
      out.write("\r\n                        <p>");
      out.print( org.apache.commons.lang.StringEscapeUtils.escapeHtml(comentario) );
      out.write("</p>\r\n                        ");

                                }
                            } else {
                        
      out.write("\r\n                        <p>Sin comentarios</p>\r\n                        ");

                            }
                        
      out.write("\r\n                    </td>\r\n                    <td>\r\n                        ");
      out.write("\r\n                        ");

                            Calificacion calificacion = calificacionDAO.getCalificacionByUsuarioId(user.getIdusuario());
                            if (calificacion != null) {
                        
      out.write("\r\n                        ");
      out.print( calificacion.getPuntuacion() );
      out.write("\r\n                        ");

                            }
                            else {
                        
      out.write("\r\n                        Sin puntuación\r\n                        ");

                            }
                        
      out.write("\r\n                    </td>\r\n\r\n\r\n                    <td>\r\n                        <form action=\"ControladorCalificar\" method=\"POST\">\r\n                            <input type=\"hidden\" name=\"accion\" value=\"pulgarArriba_");
      out.print( user.getIdusuario() );
      out.write("\">\r\n                            <button type=\"submit\" ");
 if (user.getIdusuario() == idusuario) { 
      out.write("disabled");
 } 
      out.write(">Pulgar arriba</button>\r\n                        </form>\r\n                        <form action=\"ControladorCalificar\" method=\"POST\">\r\n                            <input type=\"hidden\" name=\"accion\" value=\"pulgarAbajo_");
      out.print( user.getIdusuario() );
      out.write("\">\r\n                            <button type=\"submit\" ");
 if (user.getIdusuario() == idusuario) { 
      out.write("disabled");
 } 
      out.write(">Pulgar abajo</button>\r\n                        </form>\r\n                    </td>\r\n                </tr>\r\n            ");
 } 
      out.write("\r\n        </table>\r\n    </form>\r\n    <script>\r\n        setInterval(function() {\r\n            location.reload();\r\n        }, 5000);\r\n    </script>\r\n</body>\r\n</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
