/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat9
 * Generated at: 2024-05-03 17:52:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.web.Registro;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class registro_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n<!DOCTYPE html>\r\n<html>\r\n    <head>\r\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n        <title>Registro</title>\r\n        <style>\r\n            body, html {\r\n                height: 100%;\r\n                margin: 0;\r\n                font-family: Arial, sans-serif;\r\n                display: block;\r\n                justify-content: center;\r\n                align-items: center;\r\n                background-color: #e9e9e9; /* Puedes cambiar el color de fondo si lo deseas */\r\n            }\r\n\r\n            .container {\r\n                display: flex;\r\n                justify-content: center;\r\n                align-items: center;\r\n            }\r\n\r\n            .box {\r\n                background-color: #fff;\r\n                border: 1px solid #ddd;\r\n                padding: 20px;\r\n                display: flex;\r\n                flex-direction: column;\r\n                gap: 20px;\r\n                box-shadow: 0 0 50px rgba(0, 0, 0, 0.1);\r\n                border-radius: 15px;\r\n                width: 30%;\r\n");
      out.write("                overflow: auto;\r\n                animation: fadeIn 0.5s ease;\r\n            }\r\n\r\n\r\n            h3 {\r\n                color: #000;\r\n                text-align: center;\r\n            }\r\n            \r\n            h5 {\r\n                font-weight: bold;\r\n                font-size: 15px;\r\n                margin-top: 15px;\r\n                margin-bottom: 5px;\r\n            }\r\n\r\n            form {\r\n                display: flex;\r\n                flex-direction: column;\r\n                gap: 10px; /* Espaciado entre los campos */\r\n            }\r\n\r\n            input[type=text], input[type=password], select {\r\n                width: 90%;\r\n                padding: 10px;\r\n                margin-bottom: 10px;\r\n                border: 1px solid #ccc;\r\n                border-radius: 8px;\r\n            }\r\n\r\n            input[type=submit] {\r\n                background-color: #7eb1bb;\r\n                color: white;\r\n                padding: 14px 20px;\r\n                border: none;\r\n                cursor: pointer;\r\n");
      out.write("                border-radius: 20px;\r\n                font-weight: bold;\r\n                width: 30%;\r\n                margin-left: auto;\r\n                margin-right: auto;\r\n                display: block;\r\n                transition: background-color 0.3s ease;\r\n            }\r\n            \r\n            input[type=submit]:hover {\r\n                background-color: #65999a; /* Nuevo color de fondo para el estado hover */\r\n            }\r\n            \r\n            \r\n            #rol {\r\n                width: 25%;\r\n            }\r\n            \r\n            #genero{\r\n                width: 20%;\r\n            }\r\n            \r\n            \r\n            \r\n            #camposVoluntario, #camposOrganizacion {\r\n                opacity: 0;\r\n                transition: opacity 0.5s ease;\r\n                display: none;\r\n            }\r\n\r\n            #camposVoluntario.visible, #camposOrganizacion.visible {\r\n                opacity: 1;\r\n                display: block;\r\n            }\r\n            \r\n            \r\n            @keyframes fadeIn {\r\n");
      out.write("                from {\r\n                    opacity: 0;\r\n                    transform: translateY(-10px);\r\n                }\r\n                to {\r\n                    opacity: 1;\r\n                    transform: translateY(0);\r\n                }\r\n            }\r\n\r\n            \r\n            \r\n        </style>\r\n              <link rel=\"icon\" type=\"image/jpeg\" href=\"imagenes\\logo.jpeg\"> \r\n    </head>\r\n    <body>      \r\n    <div class=\"container\">\r\n        <div class=\"box\">\r\n                <h3>Registrarse</h3>\r\n                <form method=\"post\" action=\"ControladorRegistro?accion=registrar\">\r\n                    Ingrese usuario<input type=\"text\" name=\"txtusu\" required>\r\n                    Ingrese clave<input type=\"text\" name=\"txtcla\" required>\r\n                    <label for=\"rol\">Rol:</label>\r\n                    \r\n                    <select name=\"selectrol\" id=\"rol\" onchange=\"mostrarCampos(this.value)\" required>\r\n                        <option value=\"\" disabled selected hidden>Seleccione un rol</option>\r\n                        <option value=\"voluntario\">Voluntario</option>\r\n");
      out.write("                        <option value=\"organizacion\">Organización</option>\r\n                    </select>\r\n\r\n                    \r\n                    <div id=\"camposVoluntario\" style=\"display: none;\">\r\n                        Nombres<input type=\"text\" name=\"txtnomvol\"><br>\r\n                        Apellidos<input type=\"text\" name=\"txtapevol\"><br>\r\n                        <label for=\"genero\">Género:</label>\r\n                        <select name=\"selectgenvol\" id=\"genero\">\r\n                            <option value=\"Masculino\">Masculino</option>\r\n                            <option value=\"Femenino\">Femenino</option>\r\n                        </select><br>\r\n                        Edad<input type=\"text\" name=\"txtedavol\" ><br>\r\n                        Correo<input type=\"text\" name=\"txtcorvol\" ><br>\r\n                    </div>\r\n                    <div id=\"camposOrganizacion\" style=\"display: none;\">\r\n                        Nombre Organizacion<input type=\"text\" name=\"txtnomorg\" ><br>\r\n                        Tipo de Organizacion<input type=\"text\" name=\"txttiporg\" >\r\n");
      out.write("                        Correo<input type=\"text\" name=\"txtcororg\" ><br>\r\n                    </div>\r\n                    <h5>Ubicacion</h5>\r\n                    Pais<input type=\"text\" name=\"txtpai\" >\r\n                    Ciudad<input type=\"text\" name=\"txtciu\" >\r\n                    Direccion<input type=\"text\" name=\"txtdir\" >\r\n                    <br>\r\n                    <input type=\"submit\" value=\"Guardar Cambios\">\r\n                </form>\r\n        </div>\r\n    </div>\r\n\r\n        \r\n        \r\n        \r\n        \r\n        <script>\r\n        function mostrarCampos(valor) {\r\n            var camposVoluntario = document.getElementById('camposVoluntario');\r\n            var camposOrganizacion = document.getElementById('camposOrganizacion');\r\n\r\n            // Inicialmente ocultar ambos campos\r\n            camposVoluntario.style.display = 'none';\r\n            camposOrganizacion.style.display = 'none';\r\n            camposVoluntario.style.opacity = '0';\r\n            camposOrganizacion.style.opacity = '0';\r\n\r\n            // Mostrar el campo correspondiente\r\n");
      out.write("            if (valor === 'voluntario') {\r\n                camposVoluntario.style.display = 'block';\r\n                setTimeout(function() { camposVoluntario.style.opacity = '1'; }, 10);\r\n            } else if (valor === 'organizacion') {\r\n                camposOrganizacion.style.display = 'block';\r\n                setTimeout(function() { camposOrganizacion.style.opacity = '1'; }, 10);\r\n            }\r\n        }\r\n        </script>\r\n    </body>\r\n</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
